#!/usr/bin/env python
# coding: utf-8

# # Flights Data Exploration
# ## Preliminary Wrangling
# This dataset reports flights in the United States, including carriers, arrival and departure delays, and reasons for delays, from 1987 to 2008.
# #### Variable descriptions

# | --- | **Name** | **Description** |
# | --- | --- | --- |
# | 1 | Year | 1987-2008 |
# | 2 | Month | 1-12 |
# | 3	| DayofMonth | 1-31 |
# | 4 | DayOfWeek	| 1 (Monday) - 7 (Sunday) |
# | 5	| DepTime | actual departure time (local, hhmm) |
# | 6	| CRSDepTime | scheduled departure time (local, hhmm) |
# | 7	| ArrTime | actual arrival time (local, hhmm) |
# | 8	| CRSArrTime | scheduled arrival time (local, hhmm) |
# | 9	| UniqueCarrier | unique carrier code |
# | 10 | FlightNum | flight number |
# | 11 | TailNum | plane tail number |
# | 12 | ActualElapsedTime | in minutes |
# | 13 | CRSElapsedTime | in minutes |
# | 14 | AirTime | in minutes |
# | 15 | ArrDelay | arrival delay, in minutes |
# | 16 | DepDelay | departure delay, in minutes |
# | 17 | Origin | origin IATA airport code |
# | 18 | Dest | destination IATA airport code |
# | 19 | Distance | in miles |
# | 20 | TaxiIn | taxi in time, in minutes |
# | 21 | TaxiOut | taxi out time in minutes |
# | 22 | Cancelled | was the flight cancelled? |
# | 23 | CancellationCode | reason for cancellation (A = carrier, B = weather, C = NAS, D = security) |
# | 24 | Diverted | 1 = yes, 0 = no |
# | 25 | CarrierDelay | in minutes |
# | 26 | WeatherDelay | in minutes |
# | 27 | NASDelay | in minutes |
# | 28 | SecurityDelay | in minutes |
# | 29 | LateAircraftDelay | in minutes |

# In[1]:
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb
import calendar

%matplotlib inline

# In[2]:
df_2008 = pd.read_csv('2008.csv')

# In[3]:
print(df_2008.shape)
print(df_2008.dtypes)
print(df_2008.head(10))

# In[4]:
# Due to large file size, take a sample to more efficiently analyze trends in data
df_2008.sample(100000).to_csv('2008_sampled_100000.csv')

# In[5]:
df_2008s = pd.read_csv('2008_Sampled_100000.csv')

# In[6]
print(df_2008s.shape)
print(df_2008s.dtypes)
print(df_2008s.head(10))

# In[7]:
# Making sure that we're converting numbers to days/months correctly
days = list(calendar.day_name)
days_abbr = list(calendar.day_abbr)
print(days, days_abbr)
month = list(calendar.month_name)
month_abbr = list(calendar.month_abbr)
print(month, month_abbr)
print(calendar.month_abbr[1])
exit()

# In[8]:
# Calculating how many flights there are per month.
df_2008s_month_value_counts = df_2008s.Month.value_counts().reset_index()
df_2008s_month_value_counts.columns = ["Month", "Total_Flights"]
df_2008s_month_value_counts = df_2008s_month_value_counts.sort_values(by=['Month'])
df_2008s_month_value_counts['Month'] = df_2008s_month_value_counts['Month'].apply(lambda x: calendar.month_abbr[x])
print(df_2008s_month_value_counts)
